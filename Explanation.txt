In an N by N square grid, each cell is either empty (0) or blocked (1).
A clear path from top-left to bottom-right has length k if and only if it is composed of cells C_1, C_2, ..., C_k such that:
Adjacent cells C_i and C_{i+1} are connected 8-directionally (ie., they are different and share an edge or corner)
C_1 is at location (0, 0) (ie. has value grid[0][0])
C_k is at location (N-1, N-1) (ie. has value grid[N-1][N-1])
If C_i is located at (r, c), then grid[r][c] is empty (ie. grid[r][c] == 0).
Return the length of the shortest such clear path from top-left to bottom-right.  If such a path does not exist, return -1.

Input Description:
First line contains, N the size of the matrix.
Second line contains, N elements of the matrix as o's and 1's.

Output Description:
Print the length of the shortest such clear path from top-left to bottom-right.  If such a path does not exist, return -1.

Sample Input:
3
0 0 0 1 1 0 1 1 0

Sample Output:
4

Explanation:
The given matrix is,
0 0 0
1 1 0
1 1 0
so we have to start from (0,0),(0,1),(0,2),(1,2),(2,2).

Sample Input:
2
0 1 1 0

Sample Output:
2

Sample Input:
3
0 0 0 1 0 0 0 0 1

Sample Output:
-1

Sample Input:
2
0 0 0 1

Sample Output:
-1

Sample Input:
3
0 1 1 0 0 1 1 1 0

Sample Output:
3

Sample Input:
4
0 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0

Sample Output:
5
